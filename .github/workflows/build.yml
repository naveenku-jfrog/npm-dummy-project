name: Build Frontend Artifacts Test
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering
permissions:
  contents: read
  actions: read

env:
  JFROG_CLI_BUILD_NAME: GHA-NPM-Test
  JF_URL: ${{ vars.JF_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up JFrog CLI with Access Token
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
        with:
          version: 'latest'

      - name: Jfrog Configure npm (Access Token)
        run: |
          # Use --build-npmrc to explicitly tell jfrog CLI where to write the .npmrc
          # Ensure this path is within the workspace.
          jfrog npm-config --repo-resolve=npm-virtual --repo-deploy=npm-local --build-npmrc ./.npmrc
        working-directory: ${{ github.workspace }}

      - name: Verify npm config and file creation
        run: |
          echo "--- Listing files in current directory ---"
          ls -la .
          echo "--- Contents of ./.npmrc ---"
          cat ./.npmrc
          echo "--- NPM config list ---"
          npm config list
          echo "--- NPM config get registry ---"
          npm config get registry
          echo "--- NPM config get @scope:registry ---"
          # Replace '@chkp' with your actual scope if it's different.
          # If you don't use a specific scope like @chkp, this command might not show anything.
          npm config get @chkp:registry
        working-directory: ${{ github.workspace }}

      - name: Install dependencies (Access Token)
        run: jf npm ci
        working-directory: ${{ github.workspace }}